{"meta":{"title":"张小一的博客","subtitle":"胆小认生，不易相处","description":"坚定信念，有追求，专注成果为导向，树立目标，坚持不懈，勇敢，乐观面对工作和生活中的困难和挑战，拒绝抱怨，拒绝懒惰拖延，平庸的人总是抱怨自己不懂的事情。不懊悔过去和幻想未来，实践中总结，树立责任感和责任心，实现自我成长！","author":"非专业程序员","url":"http://yoursite.com"},"pages":[{"title":"about","date":"2018-04-15T12:55:26.000Z","updated":"2018-04-15T13:03:31.922Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"works","date":"2018-04-14T08:17:58.000Z","updated":"2018-04-14T08:18:48.452Z","comments":true,"path":"works/index.html","permalink":"http://yoursite.com/works/index.html","excerpt":"","text":""}],"posts":[{"title":"Hexo","slug":"hexo","date":"2018-04-13T13:26:29.749Z","updated":"2018-04-16T07:07:33.795Z","comments":true,"path":"2018/04/13/hexo/","link":"","permalink":"http://yoursite.com/2018/04/13/hexo/","excerpt":"","text":"安装依赖 nodeyarnyarn global add hexo start mkdir blog &amp;&amp; cd blogyarn init github pagesadd repo 仓库名必须是github用户名，比如username.github.io config repo settings -&gt; GitHub Pages -&gt; 选择master分支 -&gt; save deploy 安装插件 yarn add hexo-deployer-git 修改配置文件 deploy: type: git repo: git@github.com:username/username.github.io.git branch: master 配置主题 下载后，修改根配置下的主题名称；主题配置中修改相关项。 写作 添加page添加文章（分类、标签） 配置后的动作 hexo clean hexo generate hexo deploy 访问https://yourgithubname.github.io","categories":[{"name":"工具","slug":"工具","permalink":"http://yoursite.com/categories/工具/"}],"tags":[{"name":"tools","slug":"tools","permalink":"http://yoursite.com/tags/tools/"},{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/博客/"}]},{"title":"分布式锁","slug":"java","date":"2018-04-13T13:26:29.749Z","updated":"2018-04-16T07:07:38.329Z","comments":true,"path":"2018/04/13/java/","link":"","permalink":"http://yoursite.com/2018/04/13/java/","excerpt":"","text":"分布式锁的几种实现方式：在分布式架构中，由于多线程和多台服务器，何难保证顺序性。如果需要对某一个资源进行限制，比如票务，比如请求幂等性控制等，这个时候分布式锁就排上用处。什么是分布式锁分布式锁是控制分布式系统或不同系统之间共同访问共享资源的一种锁实现，如果不同的系统或同一个系统的不同主机之间共享了某个资源时，往往需要互斥来防止彼此干扰来保证一致性。分布式锁需要解决的问题互斥性：任意时刻，只能有一个客户端获取锁，不能同时有两个客户端获取到锁。安全性：锁只能被持有该锁的客户端删除，不能由其它客户端删除。死锁：获取锁的客户端因为某些原因（如down机等）而未能释放锁，其它客户端再也无法获取到该锁。容错：当部分节点（redis节点等）down机时，客户端仍然能够获取锁和释放锁。分布式锁的实现方式数据库实现缓存实现，比如rediszookeeper实现未完待续","categories":[{"name":"tools","slug":"tools","permalink":"http://yoursite.com/categories/tools/"}],"tags":[{"name":"tools","slug":"tools","permalink":"http://yoursite.com/tags/tools/"}]}]}