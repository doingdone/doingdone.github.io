<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>HTML Entities</title>
      <link href="/2018/04/23/HTML-Entities/"/>
      <url>/2018/04/23/HTML-Entities/</url>
      <content type="html"><![CDATA[<h2 id="Some-Useful"><a href="#Some-Useful" class="headerlink" title="Some Useful"></a>Some Useful</h2><p>Result|    Description|    Entity Name|    Entity Number<br>       |non-breaking space|    &nbsp;|    &#160;<br>&lt;|    less than|    &lt;|    &#60;</p><blockquote><p>|    greater than|    &gt;|    &#62;<br>&amp;|    ampersand|    &amp;|    &#38;<br>¢|    cent|    &cent;|    &#162;<br>£|    pound|    &pound;|    &#163;<br>¥|    yen|    &yen;|    &#165;<br>€|    euro|    &euro;|    &#8364;<br>©|    copyright|    &copy;|    &#169;<br>®|    registered trademark|    &reg;|    &#174;</p></blockquote><h2 id="Combining-Diacritical-Marks"><a href="#Combining-Diacritical-Marks" class="headerlink" title="Combining Diacritical Marks"></a>Combining Diacritical Marks</h2><p>Mark|    Character|    Construct|    Result<br>  ̀|    a|    a&#768;|    à<br>  ́|    a|    a&#769;|    á<br>  ̂|    a|    a&#770;|    â<br>  ̃|    a|    a&#771;|    ã<br>  ̀|    O|    O&#768;|    Ò<br>  ́|    O|    O&#769;|    Ó<br>  ̂|    O|    O&#770;|    Ô<br>  ̃|    O|    O&#771;|    Õ</p>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>webpack</title>
      <link href="/2018/04/22/webpack/"/>
      <url>/2018/04/22/webpack/</url>
      <content type="html"><![CDATA[<h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><blockquote><p>nodejs</p></blockquote><blockquote><p>npm or yarn</p></blockquote><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><blockquote><p>mkdir project &amp;&amp; cd project</p></blockquote><blockquote><p>yarn init -y</p></blockquote><blockquote><p>yarn add webpack webpack-cli</p></blockquote><blockquote><p>添加webpack配置文件</p></blockquote><blockquote><p>修改package.json 文件，添加脚本</p></blockquote>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>crypto</title>
      <link href="/2018/04/21/crypto/"/>
      <url>/2018/04/21/crypto/</url>
      <content type="html"><![CDATA[<h2 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h2><ul><li><p>什么是加密</p></li><li><p>什么是编码</p></li></ul><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li>摘要是干什么的，跟加密有什么区别</li></ul>]]></content>
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>关于编码</title>
      <link href="/2018/04/21/Java%E7%BC%96%E7%A0%81/"/>
      <url>/2018/04/21/Java%E7%BC%96%E7%A0%81/</url>
      <content type="html"><![CDATA[<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><blockquote><p>hex也称为base16，意思是使用16个可见字符来表示一个二进制数组，编码后数据大小将翻倍,因为1个字符需要用2个可见字符来表示。</p></blockquote><blockquote><p>base32，意思是使用32个可见字符来表示一个二进制数组，编码后数据大小变成原来的8/5,也即5个字符用8个可见字符表示，但是最后如果不足8个字符，将用=来补充。</p></blockquote><blockquote><p>base64，意思是使用64个可见字符来表示一个二进制数组，编码后数据大小变成原来的4/3,也即3个字符用4个可见字符来表示。</p></blockquote><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">有很多字符是不可见的，我们需要把这些不可见字符变成可见字符。那为啥要变成可见字符？你是看着乱码舒服还是看着可见字符舒服呢？其实不仅仅舒不舒服的问题，有些时候还必须要用可见字符，例如在网络中传输数据时，不同路由器对于不可见字符的处理是不同的，因此可能出现数据错误，因此还必须使用可见字符。</span><br></pre></td></tr></table></figure><h2 id="Unicode"><a href="#Unicode" class="headerlink" title="Unicode"></a>Unicode</h2><blockquote><p>只是一个符号集，将世界上所有的符号都纳入其中。</p></blockquote><blockquote><p>只规定了符号的二进制代码，却没有规定这个二进制代码应该如何存储。</p></blockquote><h2 id="乱码"><a href="#乱码" class="headerlink" title="乱码"></a>乱码</h2><p>乱码是因为编码、解码方式不一致，因此要知道字符的编码方式，然后按照同样的方式去解码。</p><p>编码转换方法</p><pre><code>new String(&quot;hello&quot;.getBytes(&quot;ISO-8859-1&quot;), &quot;UTF-8&quot;);</code></pre><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><h3 id="HEX"><a href="#HEX" class="headerlink" title="HEX"></a>HEX</h3><blockquote><p>依赖Guava</p></blockquote><pre><code>/** * Hex编码, 将byte[]编码为String，默认为ABCDEF为大写字母. */public static String encodeHex(byte[] input) {    return BaseEncoding.base16().encode(input);}/** * Hex解码, 将String解码为byte[]. *  * 字符串有异常时抛出IllegalArgumentException. */public static byte[] decodeHex(CharSequence input) {    return BaseEncoding.base16().decode(input);}</code></pre><h3 id="Base32"><a href="#Base32" class="headerlink" title="Base32"></a>Base32</h3><h3 id="Base64"><a href="#Base64" class="headerlink" title="Base64"></a>Base64</h3><blockquote><p>依赖Guava</p></blockquote><pre><code>/** * Base64编码. */public static String encodeBase64(byte[] input) {    return BaseEncoding.base64().encode(input);}/** * Base64解码. *  * 如果字符不合法，抛出IllegalArgumentException */public static byte[] decodeBase64(CharSequence input) {    return BaseEncoding.base64().decode(input);}</code></pre><h2 id="区别与联系"><a href="#区别与联系" class="headerlink" title="区别与联系"></a>区别与联系</h2><p>区别主要就是空间效率的区别，base64是具有比较高的空间效率的。当然，hex编码不区分大小写，但是base32与base64是区分的。<br>联系就是大家都是一种稳定的把二进制数组变成可见字符的编码方式。<br>base32中StdEncoding和HexEncoding所使用的字符不同，但是具体其他区别我也不是很清楚。<br>base64中URLEncoding一般用于编码URL</p>]]></content>
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>exception处理</title>
      <link href="/2018/04/19/exception/"/>
      <url>/2018/04/19/exception/</url>
      <content type="html"><![CDATA[<h2 id="运行时-vs-not"><a href="#运行时-vs-not" class="headerlink" title="运行时 vs not"></a>运行时 vs not</h2><h2 id="spring统一异常处理"><a href="#spring统一异常处理" class="headerlink" title="spring统一异常处理"></a>spring统一异常处理</h2><h2 id="异常日志记录"><a href="#异常日志记录" class="headerlink" title="异常日志记录"></a>异常日志记录</h2><h2 id="异常堆栈信息"><a href="#异常堆栈信息" class="headerlink" title="异常堆栈信息"></a>异常堆栈信息</h2>]]></content>
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
            <tag> aop </tag>
            
            <tag> util </tag>
            
            <tag> 异常 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>logback</title>
      <link href="/2018/04/19/logback/"/>
      <url>/2018/04/19/logback/</url>
      <content type="html"><![CDATA[]]></content>
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> util </tag>
            
            <tag> springboot </tag>
            
            <tag> 日志 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>spring-mock</title>
      <link href="/2018/04/19/spring-mock/"/>
      <url>/2018/04/19/spring-mock/</url>
      <content type="html"><![CDATA[]]></content>
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>springboot-mybatis</title>
      <link href="/2018/04/18/springboot-mybatis/"/>
      <url>/2018/04/18/springboot-mybatis/</url>
      <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>springboot集成mybaits时，有mybatis官方提供的mybatis-spring-boot-starter，但mapper不可通用，开发工作量大，<br>因此使用mapper-spring-boot-starter的通用mapper。</p><p>通用Mapper都可以极大的方便开发人员。<br>可以随意的按照自己的需要选择通用方法，还可以很方便的开发自己的通用方法。<br>极其方便的使用MyBatis单表的增删改查。<br>支持单表操作，不支持通用的多表联合查询。</p><p><a href="https://github.com/abel533/Mapper" target="_blank" rel="noopener">github</a><br><a href="https://github.com/abel533/Mapper/wiki" target="_blank" rel="noopener">wiki</a></p><h2 id="pom"><a href="#pom" class="headerlink" title="pom"></a>pom</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">    &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;$&#123;druid-starter.version&#125;&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--mapper--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;tk.mybatis&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mapper-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;$&#123;mapper-starter.version&#125;&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ol><li>数据源配置<blockquote><p>参考druid-spring-boot-starter配置即可</p></blockquote></li><li>mybatis配置</li></ol><blockquote><p>config-location与configuration只可配置一项</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">config-location: classpath:mybatis-config.xml</span><br><span class="line">configuration:</span><br><span class="line">    map-underscore-to-camel-case: true</span><br><span class="line">    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl</span><br><span class="line">type-aliases-package:</span><br><span class="line">mapper-locations:</span><br></pre></td></tr></table></figure><ol start="3"><li>mapper配置</li></ol><blockquote><p>详见wiki</p></blockquote><blockquote><p>mappers配置项注意</p></blockquote><p>如果只使用通用mapper，可以不配置mappers，如果使用了MysqlMapper等其他mapper，而且自己定义了BaseMapper，要设置mappers。（一般BaseMapper继承Mapper和其他mapper，比如MysqlMapper）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mapper:</span><br><span class="line">    mappers:</span><br><span class="line">        - com.daijk.demo.dao.base.BaseMapper</span><br></pre></td></tr></table></figure><h2 id="开撸"><a href="#开撸" class="headerlink" title="开撸"></a>开撸</h2><h3 id="关于-MapperScan"><a href="#关于-MapperScan" class="headerlink" title="关于@MapperScan"></a>关于@MapperScan</h3><p>包名必填，并且mappers配置的类不能在包下</p><h3 id="对象关系映射"><a href="#对象关系映射" class="headerlink" title="对象关系映射"></a>对象关系映射</h3><ul><li>主键 @Id</li><li>列 @Column @ColumnType</li></ul>]]></content>
      
      <categories>
          
          <category> spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
            <tag> mybatis </tag>
            
            <tag> 持久化 </tag>
            
            <tag> 数据源 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>springboot web</title>
      <link href="/2018/04/16/springboot-web/"/>
      <url>/2018/04/16/springboot-web/</url>
      <content type="html"><![CDATA[<h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="config"><a href="#config" class="headerlink" title="config"></a>config</h2><p>参考[<a href="https://docs.spring.io/spring-boot/docs/2.0.1.RELEASE/reference/htmlsingle/#common-application-properties]" target="_blank" rel="noopener">https://docs.spring.io/spring-boot/docs/2.0.1.RELEASE/reference/htmlsingle/#common-application-properties]</a><br>WEB PROPERTIES 部分</p><h2 id="thymeleaf"><a href="#thymeleaf" class="headerlink" title="thymeleaf"></a>thymeleaf</h2><p>参考[<a href="https://www.thymeleaf.org/documentation.html]" target="_blank" rel="noopener">https://www.thymeleaf.org/documentation.html]</a></p><h2 id="ModelAndView"><a href="#ModelAndView" class="headerlink" title="ModelAndView"></a>ModelAndView</h2><h2 id="json"><a href="#json" class="headerlink" title="json"></a>json</h2><ul><li>@RestController</li></ul><h2 id="相关注解"><a href="#相关注解" class="headerlink" title="相关注解"></a>相关注解</h2><ul><li>@Controller</li><li>@RestController</li><li>@GetMapping</li><li>@PostMapping</li><li>@PutMapping</li><li>@DeleteMapping</li></ul>]]></content>
      
      <categories>
          
          <category> spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>springboot config</title>
      <link href="/2018/04/16/springboot-config/"/>
      <url>/2018/04/16/springboot-config/</url>
      <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>spingboot 可以添加自定义的配置，需要在application.yml文件中添加，并设置对应的Config类解析。<br>当然也可以指定配置文件，及相关的解析前缀。</p><h2 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h2><p>application.yml</p><p>server:<br>  servlet:<br>    context-path: /patient<br>  port: 8080<br>spring:<br>  thymeleaf:<br>    encoding: UTF-8<br>    mode: HTML</p><p>Config.java</p>]]></content>
      
      <categories>
          
          <category> spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> util </tag>
            
            <tag> springboot </tag>
            
            <tag> yml </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>分布式锁</title>
      <link href="/2018/04/10/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/"/>
      <url>/2018/04/10/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</url>
      <content type="html"><![CDATA[<p>分布式锁的几种实现方式：<br>在分布式架构中，由于多线程和多台服务器，何难保证顺序性。如果需要对某一个资源进行限制，比如票务，比如请求幂等性控制等，这个时候分布式锁就排上用处。<br>什么是分布式锁<br>分布式锁是控制分布式系统或不同系统之间共同访问共享资源的一种锁实现，如果不同的系统或同一个系统的不同主机之间共享了某个资源时，往往需要互斥来防止彼此干扰来保证一致性。<br>分布式锁需要解决的问题<br>互斥性：任意时刻，只能有一个客户端获取锁，不能同时有两个客户端获取到锁。<br>安全性：锁只能被持有该锁的客户端删除，不能由其它客户端删除。<br>死锁：获取锁的客户端因为某些原因（如down机等）而未能释放锁，其它客户端再也无法获取到该锁。<br>容错：当部分节点（redis节点等）down机时，客户端仍然能够获取锁和释放锁。<br>分布式锁的实现方式<br>数据库实现<br>缓存实现，比如redis<br>zookeeper实现<br>未完待续</p>]]></content>
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>MySQL数据库规范及解读</title>
      <link href="/2018/04/07/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%84%E8%8C%83%E5%8F%8A%E8%A7%A3%E8%AF%BB/"/>
      <url>/2018/04/07/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%84%E8%8C%83%E5%8F%8A%E8%A7%A3%E8%AF%BB/</url>
      <content type="html"><![CDATA[<p><strong>转</strong> <a href="https://my.oschina.net/u/1475115/blog/1622401" target="_blank" rel="noopener">MySQL数据库规范及解读</a></p>]]></content>
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo</title>
      <link href="/2018/04/06/hexo/"/>
      <url>/2018/04/06/hexo/</url>
      <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><blockquote><p>node<br>yarn<br>yarn global add hexo</p></blockquote><h3 id="start"><a href="#start" class="headerlink" title="start"></a>start</h3><blockquote><p>mkdir blog &amp;&amp; cd blog<br>yarn init</p></blockquote><h2 id="github-pages"><a href="#github-pages" class="headerlink" title="github pages"></a>github pages</h2><h3 id="add-repo"><a href="#add-repo" class="headerlink" title="add repo"></a>add repo</h3><blockquote><p>仓库名必须是github用户名，比如username.github.io</p></blockquote><h3 id="config-repo"><a href="#config-repo" class="headerlink" title="config repo"></a>config repo</h3><blockquote><p>settings -&gt; GitHub Pages -&gt; 选择master分支 -&gt; save</p></blockquote><h3 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h3><blockquote><p>安装插件</p></blockquote><p>yarn add hexo-deployer-git</p><blockquote><p>修改配置文件</p></blockquote><p>deploy:<br>  type: git<br>  repo: <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:username/username.github.io.git<br>  branch: master</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><blockquote><p>下载后，修改根配置下的主题名称；<br>主题配置中修改相关项。</p></blockquote><h3 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h3><blockquote><p>添加page<br>添加文章（分类、标签）</p></blockquote><h3 id="配置后的动作"><a href="#配置后的动作" class="headerlink" title="配置后的动作"></a>配置后的动作</h3><ul><li><p>hexo clean</p></li><li><p>hexo generate</p></li><li><p>hexo deploy</p></li></ul><h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p><a href="https://yourgithubname.github.io" target="_blank" rel="noopener">https://yourgithubname.github.io</a></p>]]></content>
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> other </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
